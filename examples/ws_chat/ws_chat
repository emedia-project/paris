#!/bin/sh

OPTS=$*

RUNNER_SCRIPT_DIR=$(cd ${0%/*} && pwd)
NAME=`basename $0`
PIDFILE=$RUNNER_SCRIPT_DIR"/."$NAME".pid"

STARTED=false
PID=""
if [ -f $PIDFILE ] ; then 
  STARTED=true
  PID=`cat $PIDFILE | head -1`
fi
NOSHELL="-noshell -detached"
DAEMON=true
if [ "x$PARIS_RUN_MODE" = "x" ] ; then
  export PARIS_RUN_MODE="production"
else
  export PARIS_RUN_MODE=$PARIS_RUN_MODE
fi
COMPILE=false
CLEAN=false
ACTION=""

help() {
  MESSAGE=$1
  if [ "x$MESSAGE" != "x" ] ; then
    echo $MESSAGE
  fi
  echo "Usage : start.sh [options] {start|stop|console|status}" 
  echo ""
  echo "Options :"
  echo "  -d --development : Run in development mode"
  echo "  -p --production  : Run in production mode"
  echo "  -C --compile     : Compile code before run"
  echo "  -K --clean       : Clean and compile code before run"
  echo "  -h --help        : Display this message"
}

print_status() {
  case $STARTED in
    true)
      echo "$NAME is running (PID $PID)" ;;
    *)
      echo "$NAME is not running" ;;
  esac
}

start_app() {
  if [ $STARTED = true ] ; then
     echo "$NAME is already running (PID $PID)"
   else
     erl +pc unicode -pa $PWD/ebin $PWD/apps/*/ebin $PWD/deps/*/ebin $NOSHELL -config $PWD/config/$NAME.config -s $NAME
   fi
}

get_pid() {
  if [ $DAEMON = true ] ; then
    PID=`ps aux | grep -v grep | grep $NAME | grep beam | awk '{print $2}'`
    echo $PID > $PIDFILE
  fi
}

stop_app() {
  if [ $STARTED = true ] ; then
    kill -9 $PID 2>/dev/null
    rm -f $PIDFILE
  else
    echo "$NAME is not started"
  fi
}

while (( "$#" )); do
  case $1 in
    console) 
      NOSHELL="" ; DAEMON=false ; ACTION="console" ;;
    start)
      ACTION="start" ;;
    stop)
      ACTION="stop" ;;
    status)
      ACTION="status" ;;
    -d|--development) 
      export PARIS_RUN_MODE="development" ;;
    -p|--production) 
      export PARIS_RUN_MODE="production" ;;
    -C|--compile) 
      COMPILE=true ;;
    -K|--clean) 
      CLEAN=true ; COMPILE=true ;;
    -h|--help)
      help ; exit 0 ;;
    *)
      help "Invalid option $1" ; exit 1 ;;  
  esac
  shift
done

if [ $CLEAN = true ] ; then
  ./rebar clean
fi
if [ $COMPILE = true ] ; then
  ./rebar compile
fi

case $ACTION in
  stop)
    stop_app ;;
  start)
    start_app ; get_pid ;;
  console)
    start_app ;;
  status)
    print_status ;;
  *)
    help ;;
esac

